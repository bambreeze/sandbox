$ ls
test.c
$ gcc -g -o test test.c
$ ls
test		test.c		test.dSYM
$ gdb test
GNU gdb 6.3.50-20050815 (Apple version gdb-1824) (Wed Feb  6 22:51:23 UTC 2013)
Copyright 2004 Free Software Foundation, Inc.
GDB is free software, covered by the GNU General Public License, and you are
welcome to change it and/or distribute copies of it under certain conditions.
Type "show copying" to see the conditions.
There is absolutely no warranty for GDB.  Type "show warranty" for details.
This GDB was configured as "x86_64-apple-darwin"...Reading symbols for shared libraries .. done

(gdb) help
List of classes of commands:

aliases -- Aliases of other commands
breakpoints -- Making program stop at certain points
data -- Examining data
files -- Specifying and examining files
internals -- Maintenance commands
obscure -- Obscure features
running -- Running the program
stack -- Examining the stack
status -- Status inquiries
support -- Support facilities
tracepoints -- Tracing of program execution without stopping the program
user-defined -- User-defined commands

Type "help" followed by a class name for a list of commands in that class.
Type "help" followed by command name for full documentation.
Command name abbreviations are allowed if unambiguous.
(gdb) b main
Breakpoint 1 at 0x100000ea4: file test.c, line 18.
(gdb) b add
Breakpoint 2 at 0x100000e5a: file test.c, line 5.
(gdb) info b
Num Type           Disp Enb Address            What
1   breakpoint     keep y   0x0000000100000ea4 in main at test.c:18
2   breakpoint     keep y   0x0000000100000e5a in add at test.c:5
(gdb) r
Starting program: /Users/fazhang/GitHub/sandbox/gdb_test/test 
Reading symbols for shared libraries +.............................. done

Breakpoint 1, main () at test.c:18
18	    int x = 2;
(gdb) l
13	    return sum;
14	}
15	
16	int main (void)
17	{
18	    int x = 2;
19	    int y = 3;
20	    int result = 0;
21	
22	    result = add (x, y);
(gdb) info locals
x = 1606422622
y = 32767
result = 1606417152
(gdb) s
19	    int y = 3;
(gdb) info locals
x = 2
y = 32767
result = 1606417152
(gdb) s
20	    int result = 0;
(gdb) info locals
x = 2
y = 3
result = 1606417152
(gdb) p x
$1 = 2
(gdb) p y
$2 = 3
(gdb) set var x=5
(gdb) p x
$3 = 5
(gdb) info locals
x = 5
y = 3
result = 1606417152
(gdb) s
22	    result = add (x, y);
(gdb) c
Continuing.

Breakpoint 2, add (a=5, b=3) at test.c:5
5	    int aa = 0;
(gdb) c
Continuing.
The result is: 8

Program exited with code 0377.
(gdb) r
Starting program: /Users/fazhang/GitHub/sandbox/gdb_test/test 

Breakpoint 1, main () at test.c:18
18	    int x = 2;
(gdb) bt
#0  main () at test.c:18
(gdb) c
Continuing.

Breakpoint 2, add (a=2, b=3) at test.c:5
5	    int aa = 0;
(gdb) bt
#0  add (a=2, b=3) at test.c:5
#1  0x0000000100000ecc in main () at test.c:22
(gdb) n
6	    int bb = 0;
(gdb) l
1	#include <stdio.h>
2	
3	int add (int a, int b)
4	{
5	    int aa = 0;
6	    int bb = 0;
7	    int sum = 0;
8	
9	    aa = a;
10	    bb = b;
(gdb) n
7	    int sum = 0;
(gdb) info locals
aa = 0
bb = 0
sum = 32767
(gdb) n
9	    aa = a;
(gdb) n
10	    bb = b;
(gdb) n
11	    sum = aa + bb;
(gdb) info locals
aa = 2
bb = 3
sum = 0
(gdb) info x
Undefined info command: "x".  Try "help info".
(gdb) bt
#0  add (a=2, b=3) at test.c:11
#1  0x0000000100000ecc in main () at test.c:22
(gdb) f 1
#1  0x0000000100000ecc in main () at test.c:22
22	    result = add (x, y);
(gdb) bt
#0  add (a=2, b=3) at test.c:11
#1  0x0000000100000ecc in main () at test.c:22
(gdb) info locals
x = 2
y = 3
result = 0
(gdb) f 0
#0  add (a=2, b=3) at test.c:11
11	    sum = aa + bb;
(gdb) info registers
rax            0x3	3
rbx            0x0	0
rcx            0x3	3
rdx            0x7fff5fbffb20	140734799805216
rsi            0x3	3
rdi            0x2	2
rbp            0x7fff5fbffad0	0x7fff5fbffad0
rsp            0x7fff5fbffad0	0x7fff5fbffad0
r8             0x0	0
r9             0x58	88
r10            0x7fff5fbfed20	140734799801632
r11            0x246	582
r12            0x0	0
r13            0x0	0
r14            0x0	0
r15            0x0	0
rip            0x100000e7b	0x100000e7b <add+43>
eflags         0x202	514
cs             0x2b	43
ss             0x0	0
ds             0x0	0
es             0x0	0
fs             0x0	0
gs             0x0	0
(gdb) n
13	    return sum;
(gdb) info locals
aa = 2
bb = 3
sum = 5
(gdb) 
[1]+  Stopped                 gdb test
$ bg
[1]+ gdb test &

[1]+  Stopped                 gdb test
$ fg
gdb test

aa = 2
bb = 3
sum = 5
(gdb) bt
#0  add (a=2, b=3) at test.c:13
#1  0x0000000100000ecc in main () at test.c:22
(gdb) where
#0  add (a=2, b=3) at test.c:13
#1  0x0000000100000ecc in main () at test.c:22
(gdb) l
8	
9	    aa = a;
10	    bb = b;
11	    sum = aa + bb;
12	
13	    return sum;
14	}
15	
16	int main (void)
17	{
(gdb) c
Continuing.
The result is: 5

Program exited with code 0377.
(gdb) quit
$ 
